<?php
/**
 * Part of the Joomla Framework CVE Package
 *
 * @copyright  Copyright (C) 2021 Open Source Matters, Inc. All rights reserved.
 * @license    GNU General Public License version 2 or later; see LICENSE
 */

namespace Joomla\Cve;

/**
 * Class CveId
 *
 * @since  __DEPLOY_VERSION__
 */
final class CveId // Immutable value object, see JSON return object
{
	public const RESERVED = 'RESERVED';
	public const PUBLIC   = 'PUBLIC';
	public const REJECT   = 'REJECT';

	/** @var array The CVE ID */
	private $id;

	/**
	 * CveId constructor.
	 *
	 * Format:
	 * {
	 *     "requested_by": {
	 *         "cna": "education",
	 *         "user": "angelaclark@education.com"
	 *     },
	 *     "cve_id": "CVE-2021-0023",
	 *     "cve_year": "2021",
	 *     "state": "RESERVED",
	 *     "owning_cna": "education",
	 *     "reserved": "2020-11-13T19:37:34.854Z"
	 * }
	 *
	 * @param  array  $id  An array representing the CVE ID
	 */
	public function __construct(array $id)
	{
		$requestedBy          = $this->getIdValue($id, 'requested_by');
		$this->id['cna']      = $this->getIdValue($requestedBy, 'cna');
		$this->id['user']     = $this->getIdValue($requestedBy, 'user');
		$this->id['id']       = $this->getIdValue($id, 'cve_id');
		$this->id['year']     = $this->getIdValue($id, 'cve_year');
		$this->id['state']    = $this->getIdValue($id, 'state');
		$this->id['owner']    = $this->getIdValue($id, 'owning_cna');
		$this->id['reserved'] = $this->getIdValue($id, 'reserved');
	}

	public function requestingCna(): string
	{
		return $this->id['cna'];
	}

	public function requestingUser(): string
	{
		return $this->id['user'];
	}

	public function cveId(): string
	{
		return $this->id['id'];
	}

	public function cveYear(): int
	{
		return (int) $this->id['year'];
	}

	public function state(): string
	{
		return $this->id['state'];
	}

	public function owningCna(): string
	{
		return $this->id['owner'];
	}

	public function reservedAt(): \DateTime
	{
		return new \DateTime($this->id['reserved'], new \DateTimeZone('UTC'));
	}

	public function __toString(): string
	{
		return (string) $this->id['id'];
	}

	private function getIdValue(array $array, string $index)
	{
		if (!array_key_exists($index, $array)) {
			throw new \UnexpectedValueException('Not a valid CVE ID, missing field ' . $index);
		}

		return $array[$index];
	}
}
